input {
  file {
    type => "syslog_file"

    # Exclude logstash.log to avoid an infinite loop.
    exclude => [ "logstash.log*" ]

    # Wildcards work here :)
    path => [ "/var/log/messages", "/var/log/syslog", "/var/log/*.log" ]
  }

  # Syslog server
  tcp {
    port => 5000
    type => syslog_relay
  }
  udp {
    port => 5000
    type => syslog_relay
  }

# Default Syslog server port require root permissions due to port < 1024
#  tcp {
#    port => 514
#    type => syslog_relay
#  }
#  udp {
#    port => 514
#    type => syslog_relay
#  }

}
filter {
    grok {
      match => { "message" => "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{@source_host}" ]
    }
    syslog_pri { }
    date {
      match => { "syslog_timestamp" => [ "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ] }
    }
    if !("_grokparsefailure" in [tags]) {
      mutate {
        replace => [ "@source_host", "%{syslog_hostname}" ]
        replace => [ "@message", "%{syslog_message}" ]
      }
    }
    mutate {
      remove_field => [ "syslog_hostname", "syslog_message", "syslog_timestamp",
        "syslog_pri", "syslog_severity_code", "syslog_facility_code" ]
    }
}

output {
  elasticsearch_http { 
  	host => "localhost"
  }
}
